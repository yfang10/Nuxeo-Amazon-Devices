import{Polymer}from"@polymer/polymer/lib/legacy/polymer-fn.js";import{html}from"@polymer/polymer/lib/utils/html-tag.js";import{LiveConnectBehavior}from"./nuxeo-liveconnect-behavior.js";const script=document.createElement("script");script.src="https://apis.google.com/js/client.js",document.head.appendChild(script),Polymer({_template:html`
    <style>
      :host {
        display: none;
      }
    </style>

    <nuxeo-resource id="oauth2"></nuxeo-resource>
  `,is:"nuxeo-liveconnect-google-drive-provider",behaviors:[LiveConnectBehavior],properties:{providerId:{value:"googledrive"}},openPicker(){gapi.load("picker",{callback:this._init.bind(this)})},_init(){this.updateProviderInfo().then((()=>{this.isUserAuthorized?this._doAuth(!0,this._checkAuth.bind(this)):this.openPopup(this.authorizationURL,{onMessageReceive:this._parseMessage.bind(this),onClose:this._onOAuthPopupClose.bind(this)})}))},_doAuth(e,i){const t={client_id:this.clientId,scope:"email https://www.googleapis.com/auth/drive"};this.userId?(t.user_id=this.userId,t.immediate=e):t.authuser=-1,this.domain&&(t.hd=this.domain),gapi.auth.authorize(t,i)},_checkAuth(){const e=gapi.auth.getToken();e?this._handleAuthResult(e.access_token):this._doAuth(!1,this._checkAuth.bind(this))},_parseMessage(e){const i=JSON.parse(e.data);this.accessToken=i.token},_onOAuthPopupClose(){this.accessToken&&this._handleAuthResult(this.accessToken)},_handleAuthResult(e){if(e){const i=document.createElement("iron-request");i.send({url:`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token= ${e}`,handleAs:"json"}).then((()=>{this.userId=i.response.email,this._showPicker(e)}))}else this._checkAuth(!1)},_showPicker(e){const i=new google.picker.DocsView;i.setIncludeFolders(!0),i.setOwnedByMe(!0),(new google.picker.PickerBuilder).setOAuthToken(e).setAppId(this.clientId).addView(i).setCallback(this._pickerCallback.bind(this)).enableFeature(google.picker.Feature.MULTISELECT_ENABLED).build().setVisible(!0)},_pickerCallback(e){if(e[google.picker.Response.ACTION]===google.picker.Action.PICKED){const i=[];e[google.picker.Response.DOCUMENTS].forEach((e=>{i.push({providerId:this.providerId,providerName:"Google Drive",user:this.userId,fileId:e.id,name:e.name,size:e.sizeBytes,key:this.generateBlobKey(e.id)})})),this.notifyBlobPick(i)}}});