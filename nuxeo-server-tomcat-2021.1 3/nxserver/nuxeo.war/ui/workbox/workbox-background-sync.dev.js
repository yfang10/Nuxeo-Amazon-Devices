this.workbox=this.workbox||{},this.workbox.backgroundSync=function(e,t,r,n,s){"use strict";try{self.workbox.v["workbox:background-sync:3.6.3"]=1}catch(e){}const a=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"];class o{static fromRequest(e){return babelHelpers.asyncToGenerator((function*(){const t={headers:{}};"GET"!==e.method&&(t.body=yield e.clone().blob());for(const[r,n]of e.headers.entries())t.headers[r]=n;for(const r of a)void 0!==e[r]&&(t[r]=e[r]);return new o({url:e.url,requestInit:t})}))()}constructor({url:e,requestInit:t,timestamp:r=Date.now()}){this.url=e,this.requestInit=t,this._timestamp=r}get timestamp(){return this._timestamp}toObject(){return{url:this.url,timestamp:this.timestamp,requestInit:this.requestInit}}toRequest(){return new Request(this.url,this.requestInit)}clone(){const e=Object.assign({},this.requestInit);return e.headers=Object.assign({},this.requestInit.headers),this.requestInit.body&&(e.body=this.requestInit.body.slice()),new o({url:this.url,timestamp:this.timestamp,requestInit:e})}}const i="requests",u="queueName",l="workbox-background-sync";class c{constructor(t){this._queue=t,this._db=new e.DBWrapper("workbox-background-sync",1,{onupgradeneeded:e=>e.target.result.createObjectStore(i,{autoIncrement:!0}).createIndex(u,u,{unique:!1})})}addEntry(e){var t=this;return babelHelpers.asyncToGenerator((function*(){yield t._db.add(i,{queueName:t._queue.name,storableRequest:e.toObject()})}))()}getAndRemoveOldestEntry(){var e=this;return babelHelpers.asyncToGenerator((function*(){const[t]=yield e._db.getAllMatching(i,{index:u,query:IDBKeyRange.only(e._queue.name),count:1,includeKeys:!0});if(t)return yield e._db.delete(i,t.primaryKey),new o(t.value.storableRequest)}))()}}const d=new Set;class y{constructor(e,{callbacks:r={},maxRetentionTime:n=10080}={}){if(d.has(e))throw new t.WorkboxError("duplicate-queue-name",{name:e});d.add(e),this._name=e,this._callbacks=r,this._maxRetentionTime=n,this._queueStore=new c(this),this._addSyncListener()}get name(){return this._name}addRequest(e){var t=this;return babelHelpers.asyncToGenerator((function*(){n.assert.isInstance(e,Request,{moduleName:"workbox-background-sync",className:"Queue",funcName:"addRequest",paramName:"request"});const a=yield o.fromRequest(e.clone());yield t._runCallback("requestWillEnqueue",a),yield t._queueStore.addEntry(a),yield t._registerSync(),r.logger.log(`Request for '${s.getFriendlyURL(a.url)}' has been\n          added to background sync queue '${t._name}'.`)}))()}replayRequests(){var e=this;return babelHelpers.asyncToGenerator((function*(){const n=Date.now(),a=[],o=[];let i;for(;i=yield e._queueStore.getAndRemoveOldestEntry();){const t=i.clone(),u=60*e._maxRetentionTime*1e3;if(n-i.timestamp>u)continue;yield e._runCallback("requestWillReplay",i);const l={request:i.toRequest()};try{l.response=yield fetch(l.request.clone()),r.logger.log(`Request for '${s.getFriendlyURL(i.url)}'\n             has been replayed`)}catch(e){r.logger.log(`Request for '${s.getFriendlyURL(i.url)}'\n             failed to replay`),l.error=e,o.push(t)}a.push(l)}if(yield e._runCallback("queueDidReplay",a),o.length)throw yield Promise.all(o.map((function(t){return e._queueStore.addEntry(t)}))),new t.WorkboxError("queue-replay-failed",{name:e._name,count:o.length})}))()}_runCallback(e,...t){var r=this;return babelHelpers.asyncToGenerator((function*(){"function"==typeof r._callbacks[e]&&(yield r._callbacks[e].apply(null,t))}))()}_addSyncListener(){"sync"in registration?self.addEventListener("sync",(e=>{e.tag===`${l}:${this._name}`&&(r.logger.log(`Background sync for tag '${e.tag}'\n                has been received, starting replay now`),e.waitUntil(this.replayRequests()))})):(r.logger.log("Background sync replaying without background sync event"),this.replayRequests())}_registerSync(){var e=this;return babelHelpers.asyncToGenerator((function*(){if("sync"in registration)try{yield registration.sync.register(`${l}:${e._name}`)}catch(t){r.logger.warn(`Unable to register sync event for '${e._name}'.`,t)}}))()}static get _queueNames(){return d}}return Object.freeze({Queue:y,Plugin:class{constructor(...e){this._queue=new y(...e),this.fetchDidFail=this.fetchDidFail.bind(this)}fetchDidFail({request:e}){var t=this;return babelHelpers.asyncToGenerator((function*(){yield t._queue.addRequest(e)}))()}}})}(workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private);