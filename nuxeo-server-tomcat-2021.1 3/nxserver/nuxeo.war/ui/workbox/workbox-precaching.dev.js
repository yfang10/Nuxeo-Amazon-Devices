this.workbox=this.workbox||{},this.workbox.precaching=function(e,r,t,n,o,a,s,c){"use strict";try{self.workbox.v["workbox:precaching:3.6.3"]=1}catch(e){}class i{constructor(e,r,t,n){this._originalInput=e,this._entryId=r,this._revision=t;const o=new Request(r,{credentials:"same-origin"});this._cacheRequest=o,this._networkRequest=n?this._cacheBustRequest(o):o}_cacheBustRequest(e){let r=e.url;const t={credentials:"same-origin"};if("cache"in Request.prototype)t.cache="reload";else{const e=new URL(r,location),t=encodeURIComponent;e.search+=(e.search?"&":"")+t("_workbox-cache-bust")+"="+t(this._revision),r=e.toString()}return new Request(r,t)}}const l="revision",u="precached-details-models";class h{constructor(r){const t=r.replace(/[^\w-]/g,"_");this._db=new e.DBWrapper(t,2,{onupgradeneeded:this._handleUpgrade})}_handleUpgrade(e){const r=e.target.result;e.oldVersion<2&&(r.objectStoreNames.contains("workbox-precaching")&&r.deleteObjectStore("workbox-precaching"),r.objectStoreNames.contains(u)&&r.deleteObjectStore(u)),r.createObjectStore(u)}_isEntryCached(e,r){var t=this;return babelHelpers.asyncToGenerator((function*(){if((yield t._getRevision(r._entryId))!==r._revision)return!1;const n=yield caches.open(e);return!!(yield n.match(r._cacheRequest))}))()}_getAllEntries(){var e=this;return babelHelpers.asyncToGenerator((function*(){return yield e._db.getAllMatching(u,{includeKeys:!0})}))()}_getRevision(e){var r=this;return babelHelpers.asyncToGenerator((function*(){const t=yield r._db.get(u,e);return t?t[l]:null}))()}_addEntry(e){var r=this;return babelHelpers.asyncToGenerator((function*(){yield r._db.put(u,{[l]:e._revision,url:e._cacheRequest.url},e._entryId)}))()}_deleteEntry(e){var r=this;return babelHelpers.asyncToGenerator((function*(){yield r._db.delete(u,e)}))()}}const d=(e,t)=>{0!==t.length&&(r.logger.groupCollapsed(e),t.forEach((e=>{r.logger.log(e._originalInput)})),r.logger.groupEnd())},p=(e,t)=>{r.logger.groupCollapsed(e),t.forEach((e=>{r.logger.log(e)})),r.logger.groupEnd()},g=(y=babelHelpers.asyncToGenerator((function*(e){const r=e.clone(),t="body"in r?Promise.resolve(r.body):r.blob(),n=yield t;return new Response(n,{headers:r.headers,status:r.status,statusText:r.statusText})})),function(e){return y.apply(this,arguments)});var y;class _{constructor(e){this._cacheName=t.cacheNames.getPrecacheName(e),this._entriesToCacheMap=new Map,this._precacheDetailsModel=new h(this._cacheName)}addToCacheList(e){s.assert.isArray(e,{moduleName:"workbox-precaching",className:"PrecacheController",funcName:"addToCacheList",paramName:"entries"}),e.map((e=>{this._addEntryToCacheList(this._parseEntry(e))}))}_parseEntry(e){switch(typeof e){case"string":if(0===e.length)throw new n.WorkboxError("add-to-cache-list-unexpected-type",{entry:e});return new i(e,e,e);case"object":if(!e||!e.url)throw new n.WorkboxError("add-to-cache-list-unexpected-type",{entry:e});return new i(e,e.url,e.revision||e.url,!!e.revision);default:throw new n.WorkboxError("add-to-cache-list-unexpected-type",{entry:e})}}_addEntryToCacheList(e){const r=this._entriesToCacheMap.get(e._entryId);if(r){if(r._revision!==e._revision)throw new n.WorkboxError("add-to-cache-list-conflicting-entries",{firstEntry:r._originalInput,secondEntry:e._originalInput})}else this._entriesToCacheMap.set(e._entryId,e)}install({suppressWarnings:e=!1,event:t,plugins:n}={}){var o=this;return babelHelpers.asyncToGenerator((function*(){!0!==e&&(e=>{const t=[];if(e.forEach((e=>{"string"!=typeof e&&e._originalInput.revision||t.push(e._originalInput)})),0===t.length)return;r.logger.groupCollapsed("Are your precached assets revisioned?");const n=t.map((e=>`    - ${JSON.stringify(e)}`)).join("\n");r.logger.warn("The following precache entries might not be revisioned:\n\n"+n+"\n\n"),r.logger.unprefixed.warn("You can learn more about why this might be a problem here: https://developers.google.com/web/tools/workbox/modules/workbox-precaching"),r.logger.groupEnd()})(o._entriesToCacheMap),n&&s.assert.isArray(n,{moduleName:"workbox-precaching",className:"PrecacheController",funcName:"install",paramName:"plugins"});const a=yield caches.open(o._getTempCacheName()),c=yield a.keys();yield Promise.all(c.map((function(e){return a.delete(e)})));const i=[],l=[];for(const e of o._entriesToCacheMap.values())(yield o._precacheDetailsModel._isEntryCached(o._cacheName,e))?l.push(e):i.push(e);return yield Promise.all(i.map((function(e){return o._cacheEntryInTemp({event:t,plugins:n,precacheEntry:e})}))),((e,t)=>{const n=e.length,o=t.length;let a=`Precaching ${n} file${1===n?"":"s"}.`;o>0&&(a+=` ${o} file${1===o?" is":"s are"} already cached.`),r.logger.groupCollapsed(a),d("View precached URLs.",e),d("View URLs that were already precached.",t),r.logger.groupEnd()})(i,l),{updatedEntries:i,notUpdatedEntries:l}}))()}activate(e={}){var r=this;return babelHelpers.asyncToGenerator((function*(){const t=yield caches.open(r._getTempCacheName()),n=yield t.keys();for(const o of n){const n=yield t.match(o);yield a.cacheWrapper.put({cacheName:r._cacheName,request:o,response:n,plugins:e.plugins}),yield t.delete(o)}return r._cleanup()}))()}_getTempCacheName(){return`${this._cacheName}-temp`}_cacheEntryInTemp({precacheEntry:e,event:r,plugins:t}){var n=this;return babelHelpers.asyncToGenerator((function*(){let s=yield o.fetchWrapper.fetch({request:e._networkRequest,event:r,fetchOptions:null,plugins:t});return s.redirected&&(s=yield g(s)),yield a.cacheWrapper.put({cacheName:n._getTempCacheName(),request:e._cacheRequest,response:s,event:r,plugins:t}),yield n._precacheDetailsModel._addEntry(e),!0}))()}_cleanup(){var e=this;return babelHelpers.asyncToGenerator((function*(){const t=[];e._entriesToCacheMap.forEach((function(e){const r=new URL(e._cacheRequest.url,location).toString();t.push(r)}));const[n,o]=yield Promise.all([e._cleanupCache(t),e._cleanupDetailsModel(t)]);return((e,t)=>{if(0===e.length&&0===t.length)return;const n=e.length,o=t.length,a=`${n} cached request${1===n?" was":"s were"} deleted`,s=`${o} `+(1===o?"entry":"entries")+" "+(1===o?"was":"were")+" deleted from IndexedDB.";r.logger.groupCollapsed(`During precaching cleanup, ${a} and ${s}`),p("Deleted Cache Requests",e),p("Revision Details Deleted from DB",t),r.logger.groupEnd()})(n,o),{deletedCacheRequests:n,deletedRevisionDetails:o}}))()}_cleanupCache(e){var r=this;return babelHelpers.asyncToGenerator((function*(){if(!(yield caches.has(r._cacheName)))return[];const t=yield caches.open(r._cacheName),n=(yield t.keys()).filter((function(r){return!e.includes(new URL(r.url,location).toString())}));return yield Promise.all(n.map((function(e){return t.delete(e)}))),n.map((function(e){return e.url}))}))()}_cleanupDetailsModel(e){var r=this;return babelHelpers.asyncToGenerator((function*(){const t=(yield r._precacheDetailsModel._getAllEntries()).filter((function(r){const t=new URL(r.value.url,location).toString();return!e.includes(t)}));return yield Promise.all(t.map((function(e){return r._precacheDetailsModel._deleteEntry(e.primaryKey)}))),t.map((function(e){return e.value.url}))}))()}getCachedUrls(){return Array.from(this._entriesToCacheMap.keys()).map((e=>new URL(e,location).href))}}var f=Object.freeze({PrecacheController:_});s.assert.isSwEnv("workbox-precaching");let m=!1,b=!1,w=!1,v=[];const E=t.cacheNames.getPrecacheName(),R=new _(E),x={precache:e=>{R.addToCacheList(e),m||e.length<=0||(m=!0,self.addEventListener("install",(e=>{e.waitUntil(R.install({event:e,plugins:v,suppressWarnings:w}))})),self.addEventListener("activate",(e=>{e.waitUntil(R.activate({event:e,plugins:v}))})))},addRoute:e=>{b||(b=!0,self.addEventListener("fetch",(t=>{const n=((e,{ignoreUrlParametersMatching:t=[/^utm_/],directoryIndex:n="index.html",cleanUrls:o=!0,urlManipulation:a=null}={})=>{const s=new URL(e,location);s.hash="";const i=((e,r)=>{const t=e.search.slice(1).split("&").map((e=>e.split("="))).filter((e=>r.every((r=>!r.test(e[0]))))).map((e=>e.join("="))),n=new URL(e);return n.search=t.join("&"),n})(s,t);let l=[s,i];if(n&&i.pathname.endsWith("/")){const e=new URL(i);e.pathname+=n,l.push(e)}if(o){const e=new URL(i);e.pathname+=".html",l.push(e)}if(a){const e=a({url:s});l=l.concat(e)}const u=R.getCachedUrls();for(const e of l)if(-1!==u.indexOf(e.href))return r.logger.debug("Precaching found a match for "+c.getFriendlyURL(e.toString())),e.href;return null})(t.request.url,e);if(!n)return void r.logger.debug("Precaching found no match for "+c.getFriendlyURL(t.request.url));let o=caches.open(E).then((e=>e.match(n))).then((e=>e||(r.logger.debug(`The precached response for ${c.getFriendlyURL(n)} in ${E} was not found. Falling back to the network instead.`),fetch(n))));o=o.then((e=>(r.logger.groupCollapsed("Precaching is responding to: "+c.getFriendlyURL(t.request.url)),r.logger.log(`Serving the precached url: ${n}`),r.logger.groupCollapsed("View request details here."),r.logger.unprefixed.log(t.request),r.logger.groupEnd(),r.logger.groupCollapsed("View response details here."),r.logger.unprefixed.log(e),r.logger.groupEnd(),r.logger.groupEnd(),e))),t.respondWith(o)})))},precacheAndRoute:(e,r)=>{x.precache(e),x.addRoute(r)},suppressWarnings:e=>{w=e},addPlugins:e=>{v=v.concat(e)}};return Object.assign(x,f)}(workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private);