this.workbox=this.workbox||{},this.workbox.broadcastUpdate=function(e,a,s,t){"use strict";try{self.workbox.v["workbox:broadcast-cache-update:3.6.3"]=1}catch(e){}var r={CACHE_UPDATED:"CACHE_UPDATED"};const o=(e,a,o,c)=>{"BroadcastChannel"in self&&e?(t.assert.isInstance(e,BroadcastChannel,{moduleName:"workbox-broadcast-cache-update",className:"~",funcName:"broadcastUpdate",paramName:"channel"}),t.assert.isType(a,"string",{moduleName:"workbox-broadcast-cache-update",className:"~",funcName:"broadcastUpdate",paramName:"cacheName"}),t.assert.isType(o,"string",{moduleName:"workbox-broadcast-cache-update",className:"~",funcName:"broadcastUpdate",paramName:"url"}),t.assert.isType(c,"string",{moduleName:"workbox-broadcast-cache-update",className:"~",funcName:"broadcastUpdate",paramName:"source"}),e.postMessage({type:r.CACHE_UPDATED,meta:c,payload:{cacheName:a,updatedUrl:o}})):s.logger.debug(`${o} was updated, but the Broadcast Channel API is not available in the current browser.`)};class c{constructor(e,{headersToCheck:s,source:t}={}){if("string"!=typeof e||0===e.length)throw new a.WorkboxError("channel-name-required");this._channelName=e,this._headersToCheck=s||["content-length","etag","last-modified"],this._source=t||"workbox-broadcast-cache-update"}_getChannel(){return"BroadcastChannel"in self&&!this._channel&&(this._channel=new BroadcastChannel(this._channelName)),this._channel}notifyIfUpdated(e,t,r,c){((e,t,r)=>{if(!(e instanceof Response&&t instanceof Response))throw new a.WorkboxError("invalid-responses-are-same-args");return r.some((a=>e.headers.has(a)&&t.headers.has(a)))?r.every((a=>{const s=e.headers.has(a)===t.headers.has(a),r=e.headers.get(a)===t.headers.get(a);return s&&r})):(s.logger.warn("Unable to determine where the response has been updated because none of the headers that would be checked are present."),s.logger.debug("Attempting to compare the following: ",e,t,r),!0)})(e,t,this._headersToCheck)||o(this._getChannel(),c,r,this._source)}}return e.BroadcastCacheUpdate=c,e.Plugin=class{constructor(e,a){this._broadcastUpdate=new c(e,a)}cacheDidUpdate({cacheName:e,oldResponse:a,newResponse:s,request:r}){t.assert.isType(e,"string",{moduleName:"workbox-broadcast-cache-update",className:"Plugin",funcName:"cacheDidUpdate",paramName:"cacheName"}),t.assert.isInstance(s,Response,{moduleName:"workbox-broadcast-cache-update",className:"Plugin",funcName:"cacheDidUpdate",paramName:"newResponse"}),t.assert.isInstance(r,Request,{moduleName:"workbox-broadcast-cache-update",className:"Plugin",funcName:"cacheDidUpdate",paramName:"request"}),a&&this._broadcastUpdate.notifyIfUpdated(a,s,r.url,e)}},e.broadcastUpdate=o,e.messageTypes=r,e}({},workbox.core._private,workbox.core._private,workbox.core._private);