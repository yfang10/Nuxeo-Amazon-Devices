this.workbox=this.workbox||{},this.workbox.rangeRequests=function(e,r,a,t){"use strict";try{self.workbox.v["workbox:range-requests:3.6.3"]=1}catch(e){}let s=(n=babelHelpers.asyncToGenerator((function*(e,s){try{a.assert.isInstance(e,Request,{moduleName:"workbox-range-requests",funcName:"createPartialResponse",paramName:"request"}),a.assert.isInstance(s,Response,{moduleName:"workbox-range-requests",funcName:"createPartialResponse",paramName:"originalResponse"});const t=e.headers.get("range");if(!t)throw new r.WorkboxError("no-range-header");const n=function(e){a.assert.isType(e,"string",{moduleName:"workbox-range-requests",funcName:"parseRangeHeader",paramName:"rangeHeader"});const t=e.trim().toLowerCase();if(!t.startsWith("bytes="))throw new r.WorkboxError("unit-must-be-bytes",{normalizedRangeHeader:t});if(t.includes(","))throw new r.WorkboxError("single-range-only",{normalizedRangeHeader:t});const s=/(\d*)-(\d*)/.exec(t);if(null===s||!s[1]&&!s[2])throw new r.WorkboxError("invalid-range-values",{normalizedRangeHeader:t});return{start:""===s[1]?null:Number(s[1]),end:""===s[2]?null:Number(s[2])}}(t),o=yield s.blob(),i=function(e,t,s){a.assert.isInstance(e,Blob,{moduleName:"workbox-range-requests",funcName:"calculateEffectiveBoundaries",paramName:"blob"});const n=e.size;if(s>n||t<0)throw new r.WorkboxError("range-not-satisfiable",{size:n,end:s,start:t});let o,i;return null===t?(o=n-s,i=n):null===s?(o=t,i=n):(o=t,i=s+1),{start:o,end:i}}(o,n.start,n.end),l=o.slice(i.start,i.end),u=l.size,c=new Response(l,{status:206,statusText:"Partial Content",headers:s.headers});return c.headers.set("Content-Length",u),c.headers.set("Content-Range",`bytes ${i.start}-${i.end-1}/`+o.size),c}catch(r){return t.logger.warn("Unable to construct a partial response; returning a 416 Range Not Satisfiable response instead."),t.logger.groupCollapsed("View details here."),t.logger.unprefixed.log(r),t.logger.unprefixed.log(e),t.logger.unprefixed.log(s),t.logger.groupEnd(),new Response("",{status:416,statusText:"Range Not Satisfiable"})}})),function(e,r){return n.apply(this,arguments)});var n;return e.createPartialResponse=s,e.Plugin=class{cachedResponseWillBeUsed({request:e,cachedResponse:r}){return babelHelpers.asyncToGenerator((function*(){return r&&e.headers.has("range")?yield s(e,r):r}))()}},e}({},workbox.core._private,workbox.core._private,workbox.core._private);