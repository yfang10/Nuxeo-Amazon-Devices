import"../../lib/select2-editor.js";class Select2Editor extends Handsontable.editors.Select2Editor{prepare(t,e,i,r,o,n){const s=n.widget,l=n.connection;Handsontable.editors.TextEditor.prototype.prepare.apply(this,arguments);const d=n.multiple;this.options={query:t=>{this.query(l,s.properties,t.term).then((e=>{t.callback({results:e})}))},dropdownAutoWidth:!0,allowClear:!0,width:"resolve",minimumInputLength:n.minimumInputLength||0,formatResult:this.resultFormatter.bind(this),formatSelection:this.selectionFormatter.bind(this),multiple:d,placeholder:"Select a value",initSelection:this.initSelection(d).bind(this),id:this.getEntryId}}open(){super.open(),this.$textarea.on("selected",this.onSelected.bind(this)),this.$textarea.on("select2-selected",this.onSelected.bind(this)),this.$textarea.on("select2-removed",this.onRemoved.bind(this))}onSelected(){}onRemoved(){}resultFormatter(t){return this.formatter(t)}selectionFormatter(t){return this.formatter(t)}initSelection(t){return t?(t,e)=>e(t.val().split(",").map((t=>({id:t,text:this.getSelectionText(t)})))):(t,e)=>e({id:t.val(),text:this.getSelectionText(t.val())})}getSelectionText(t){return t}getEntryId(t){return t.id}query(){}}export{Select2Editor};