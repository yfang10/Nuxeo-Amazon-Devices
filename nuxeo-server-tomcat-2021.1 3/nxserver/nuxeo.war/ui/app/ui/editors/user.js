import{Select2Editor}from"./select2";import{Operation}from"../../nuxeo/rpc/operation";class UserEditor extends Select2Editor{prepare(e,r,t,s,i,p){const a=Array.isArray(i)?i.map((e=>this.getEntryId(e))):this.getEntryId(i);super.prepare(e,r,t,s,a,p)}getSelectionText(e){return e.startsWith("user:")||e.startsWith("group:")?e.split(":")[1]:e}saveValue(e,r){let t=e[0][0];t?(t=t.split(",").map((e=>{let r="user";if(e.startsWith("user:")||e.startsWith("group:")){const t=e.split(":");r=t[0],e=t[1]}return{"entity-type":r,id:e}})),this.cellProperties.multiple||(t=t[0])):t=this.cellProperties.multiple?[]:null,super.saveValue([[t]],r)}getEntryId(e){return e["entity-type"]?`${e["entity-type"]}:${e.id}`:e.prefixed_id||e.id}query(e,r,t){const s=new Operation(e,"UserGroup.Suggestion");return Object.assign(s.params,r),s.params.searchTerm=t,this.widgetProperties.userSuggestionSearchType&&(s.params.searchType=this.widgetProperties.userSuggestionSearchType),s.execute()}formatter(e){return e.text||e.displayLabel}get widgetProperties(){return this.cellProperties.widget.properties.any||{}}}function UserRenderer(e,r,t,s,i,p,a){p&&(Array.isArray(p)||(p=[p]),arguments[5]=p.map((e=>e.id)).join(",")),a.defaultRenderer.apply(this,arguments)}export{UserEditor,UserRenderer};