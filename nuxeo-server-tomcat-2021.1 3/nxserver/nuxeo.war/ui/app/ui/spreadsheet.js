import{Column}from"./column";import{Schemas}from"../nuxeo/rest/schemas";import{Query}from"../nuxeo/rpc/query";import{DirectoryEditor}from"./editors/directory";import{Select2Editor}from"./editors/select2";import{assign,hasProp}from"../utils";class Spreadsheet{constructor(e,t,r,s,i){this.container=e,this.connection=t,this._data=[],this.options={data:this._data,autoColumnSize:!1,colWidths:200,stretchH:"all",rowHeaders:!0,manualColumnResize:!0,startRows:0,currentRowClassName:"currentRow",currentColClassName:"currentCol",contextMenu:["undo","redo"],afterChange:this.onChange.bind(this),beforeAutofill:this.beforeAutofill.bind(this),beforeCopy:this.beforeCopy.bind(this),search:!0,cells:this.createCell.bind(this),language:i},this.query=new Query(t),this.query.enrich("document","permissions"),this.query.fetch("document","properties","versionLabel"),this.query.fetch("directoryEntry","parent"),this.query.depth="root",this.query.translate("directoryEntry","label"),this.query.pageProvider=s;const o=[];for(const e of r){const t=e.field.indexOf(":")>-1?e.field.split(":")[0]:void 0;t&&-1===o.indexOf(t)&&o.push(t)}new Schemas(t).fetch(o).then((e=>{const s=r.map((t=>{const r={def:{properties:{any:{sortPropertyName:t.field,label:t.label}}},widget:{field:t.field}};let s;if(t.field.indexOf(":")>-1){const[r,i]=t.field.split(":");s=e[r].fields[i]||void 0,s="string"==typeof s?{type:s}:s}if(s){s.type.endsWith("[]")&&(r.widget.multiple=!0);const e=s.itemConstraints||s.constraints;if(e)for(const t of e)switch(t.name){case"documentResolver":r.widget.type="string[]"===s.type?"multipleDocumentsSuggestion":"singleDocumentSuggestion";break;case"directoryResolver":r.widget.type="string[]"===s.type?"suggestManyDirectory":"suggestOneDirectory",r.widget.properties={dbl10n:!0,directoryName:t.parameters.directory};break;case"userManagerResolver":let e;r.widget.type="string[]"===s.type?"multipleUsersSuggestion":"singleUserSuggestion","true"===t.parameters.includeGroups&&"true"===t.parameters.includeUsers?e="USER_GROUP_TYPE":"true"===t.parameters.includeUsers?e="USER_TYPE":"true"===t.parameters.includeGroups&&(e="GROUP_TYPE"),r.widget.properties={any:{userSuggestionSearchType:e}}}}return r}));this.columns=s.map((e=>new Column(t,e.def,e.widget,this.dirtyRenderer.bind(this))))})),this.container.handsontable(this.options),this.ht=this.container.data("handsontable")}get data(){return this._data}set data(e){this._data=e,this.ht.loadData(this._data)}getDataAtRow(e){return this.ht?this.ht.getSourceDataAtRow(e):null}get columns(){return this._columns}set columns(e){this._columns=e,this._columnsByField={};for(const t of e)this._columnsByField[t.data]=t;this._update()}createCell(e){const t={},r=this.getDataAtRow(e),s=r&&r.contextParameters&&r.contextParameters.permissions;return s&&-1===s.indexOf("Write")&&(t.readOnly=!0),t}set nxql(e){this.queryParameters=[e]}set queryParameters(e){this.query.queryParameters=e}set namedParameters(e){this.query.namedParameters=e}set sortInfos(e){this.query.sortBy=e.map((e=>e.sortColumn)),this.query.sortOrder=e.map((e=>e.sortAscending?"asc":"desc"))}_fetch(){return this.query.run().then((e=>{if(Array.prototype.push.apply(this.data,e.entries),this.ht.updateSettings({maxRows:this.data.length}),e.isNextPageAvailable)return this.query.page++,this._fetch()}))}update(){return this.data.length=0,this._dirty={},this.query.page=0,this.ht.clearUndo(),this._fetch()}save(){return Promise.all(Object.keys(this._dirty).map((e=>this.connection.request(`/id/${e}`).put({body:this._dirty[e]}).then((()=>(delete this._dirty[e],e))).catch((t=>{throw this._dirty[e]._error=t,new Error(t)}))))).catch((e=>{console.error(e)})).then((e=>(this.ht.clearUndo(),this.ht.render(),e)))}onChange(e,t){if("loadData"!==t){if(null!==e){for(let t=0;t<e.length;t++){let[r,s,i,o]=e[t];if(i===o)continue;const n=this.data[r].uid,a=this._dirty[n]=this._dirty[n]||{"entity-type":"document",uid:n};this._columnsByField[s].multiple&&!Array.isArray(o)&&(o=o?o.split(","):[]),o||"object"!=typeof i||(o=null),assign(a,s,o)}this.autosave&&this.save(),this.ht.render()}}else this._dirty={}}beforeAutofill(e,t,r){const s=this.ht.getInstance(),i=s.getActiveEditor();if(!(i&&i instanceof DirectoryEditor))return;if(!r&&(0===r.length||0===r[0].length))return void console.warn("It is not expected to have an empty data set.");const o=new WalkontableCellRange(void 0,s.getSelectedRange().highlight,e).getDirection();"S"===o.charAt(0)&&(r=r.reverse());const n=this._getCornerCell(s.getSelectedRange().from,s.getSelectedRange().to,o);for(let o=e.row;o<=t.row;o++)for(let a=e.col;a<=t.col;a++){const t=(o-e.row)%r.length,l=(a-e.col)%r[0].length,d=r[t][l];if(!i.formatter(d)){const e=d.properties&&d.properties.id||d,r=s.getCellMeta(o,a);r._labels||(r._labels={});const i=s.getCellMeta(n.row+t,n.col+l);i._labels&&(r._labels[e]=i._labels[e])}}}beforeCopy(e,t,r){if("object"==typeof e){const s=this.ht.getCellEditor(t,this.ht.propToCol(r)),i=Handsontable.editors.getEditor(s,this.ht);i instanceof Select2Editor&&(e=Array.isArray(e)?e.map(i.getEntryId):i.getEntryId(e))}return e}_getCornerCell(e,t,r){const s=new WalkontableCellRange(void 0,e,t);switch(r){case"NW-SE":return s.getBottomRightCorner();case"NE-SW":return s.getBottomLeftCorner();case"SE-NW":return s.getTopLeftCorner();case"SW-NE":return s.getTopRightCorner()}}dirtyRenderer(e,t,r,s,i){Handsontable.renderers.TextRenderer.apply(this,arguments);const o=this.getDataAtRow(r);if(o&&this._dirty[o.uid]){let e="#e2f1ff";this._dirty[o.uid].hasOwnProperty("_error")?e="#f33":hasProp(this._dirty[o.uid],i)&&(e="#afd8ff"),$(t).css({background:e})}}destroy(){this.ht.destroy()}_update(){const e=$.extend({},this.options);e.colHeaders=this.columns.map((e=>e.header)),e.columns=this.columns,this.ht.updateSettings(e)}}const ReadOnlyRenderer=function(e,t){Handsontable.renderers.TextRenderer.apply(this,arguments),t.style.color="green",t.style.background="#CEC"};Handsontable.renderers.registerRenderer("readOnly",ReadOnlyRenderer);export{Spreadsheet};