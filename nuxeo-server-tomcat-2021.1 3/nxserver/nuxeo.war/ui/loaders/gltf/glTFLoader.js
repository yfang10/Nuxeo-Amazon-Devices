import{GLTFLoaderUtils}from"./glTFLoaderUtils.js";import{glTFParser}from"./glTF-parser.js";import{glTFShader,glTFShaders}from"./glTFShaders.js";let glTFLoader=function(){this.meshesRequested=0,this.meshesLoaded=0,this.pendingMeshes=[],this.animationsRequested=0,this.animationsLoaded=0,this.animations=[],this.shadersRequested=0,this.shadersLoaded=0,this.shaders={},this.loadRequests=[],glTFShaders.removeAll(),THREE.Loader.call(this)};glTFLoader.prototype=new THREE.Loader,glTFLoader.prototype.constructor=glTFLoader,glTFLoader.prototype.load=function(url,callback){var theLoader=this;function RgbArraytoHex(e){return e?(255<<24)+(Math.floor(255*e[0])<<16)+(Math.floor(255*e[1])<<8)+Math.floor(255*e[2]):4294967295}function componentsPerElementForGLType(e){var t;switch(e){case"SCALAR":t=1;break;case"VEC2":t=2;break;case"VEC3":t=3;break;case"VEC4":case"MAT2":t=4;break;case"MAT3":t=9;break;case"MAT4":t=16}return t}function replaceShaderDefinitions(shader,material){var program=material.params.program,shaderParams=material.params.technique.parameters,shaderAttributes=material.params.technique.attributes,params={};for(var attribute in material.params.attributes){var pname=shaderAttributes[attribute],shaderParam=shaderParams[pname],semantic=shaderParam.semantic;semantic&&(params[attribute]=shaderParam)}var s=shader,r="";for(var pname in params){var param=params[pname],semantic=param.semantic;switch(r=eval("/"+pname+"/g"),semantic){case"POSITION":s=s.replace(r,"position");break;case"NORMAL":s=s.replace(r,"normal");break;case"TEXCOORD_0":s=s.replace(r,"uv");break;case"WEIGHT":s=s.replace(r,"skinWeight");break;case"JOINT":s=s.replace(r,"skinIndex")}}return s}function replaceShaderSemantics(e){var t=theLoader.shaders[e.params.vertexShader];t&&(t=replaceShaderDefinitions(t,e),theLoader.shaders[e.params.vertexShader]=t)}function createShaderMaterial(e){replaceShaderSemantics(e);var t=theLoader.shaders[e.params.fragmentShader];if(!t)return console.log("ERROR: Missing fragment shader definition:",e.params.fragmentShader),new THREE.MeshPhongMaterial;var r=theLoader.shaders[e.params.vertexShader];if(!r)return console.log("ERROR: Missing vertex shader definition:",e.params.vertexShader),new THREE.MeshPhongMaterial;var a=THREE.UniformsUtils.clone(e.params.uniforms);for(var n in e.params.uniforms){var i=e.params.uniforms[n],s=a[n];"t"==s.type&&(s.value=i.value)}return new THREE.RawShaderMaterial({fragmentShader:t,vertexShader:r,uniforms:a,transparent:e.params.transparent})}function LoadTexture(e){if(!e)return null;function t(e,t){var r=decodeURIComponent(t);return e?atob(r):r}function r(e,r){for(var a=t(e,r),n=new ArrayBuffer(a.length),i=new Uint8Array(n),s=0;s<a.length;s++)i[s]=a.charCodeAt(s);return n}var a=/^data:(.*?)(;base64)?,(.*)$/.exec(e);if(null!==a){var n=new THREE.Texture,i=function(e,a){a=void 0!==a?a:"";var n=e[1],i=!!e[2],s=e[3];switch(a){case"":case"text":return t(i,s);case"ArrayBuffer":return r(i,s);case"blob":var o=r(i,s);return new Blob([o],{type:n});case"document":return(new DOMParser).parseFromString(t(i,s),n);case"json":return JSON.parse(t(i,s));default:throw"Unhandled responseType: "+a}}(a,"blob");return function(e,t,r){var a=new Image;a.onload=function(){var e;e=a,n.image=e,n.needsUpdate=!0},a.src=e}(window.URL.createObjectURL(i)),n}return(new THREE.TextureLoader).load(e)}function CreateTexture(e,t){var r,a=null,n=null;if(t&&(r=t)){var i=e.getEntry(r);if(i){var s=e.getEntry(i.description.source);s&&(a=s.description.uri);var o=e.getEntry(i.description.sampler);o&&(n=o.description)}}return(r=LoadTexture(a))&&n&&(n.wrapS==WebGLRenderingContext.REPEAT&&(r.wrapS=THREE.RepeatWrapping),n.wrapT==WebGLRenderingContext.REPEAT&&(r.wrapT=THREE.RepeatWrapping),n.magFilter==WebGLRenderingContext.LINEAR&&(r.magFilter=THREE.LinearFilter)),r}var ClassicGeometry=function(){this.geometry=new THREE.BufferGeometry,this.totalAttributes=0,this.loadedAttributes=0,this.indicesLoaded=!1,this.finished=!1,this.onload=null,this.uvs=null,this.indexArray=null};ClassicGeometry.prototype.constructor=ClassicGeometry,ClassicGeometry.prototype.buildBufferGeometry=function(){var e=this.geometry;e.setIndex(new THREE.BufferAttribute(this.indexArray,1));var t={start:0,index:0,count:this.indexArray.length};e.groups.push(t),e.computeBoundingSphere()},ClassicGeometry.prototype.checkFinished=function(){this.indexArray&&this.loadedAttributes===this.totalAttributes&&(this.buildBufferGeometry(),this.finished=!0,this.onload&&this.onload())};var IndicesDelegate=function(){};IndicesDelegate.prototype.handleError=function(e,t){console.log("ERROR(IndicesDelegate):"+e+":"+t)},IndicesDelegate.prototype.convert=function(e,t){return new Uint16Array(e,0,t.indices.count)},IndicesDelegate.prototype.resourceAvailable=function(e,t){var r=t.geometry;return r.indexArray=e,r.checkFinished(),!0};var indicesDelegate=new IndicesDelegate,IndicesContext=function(e,t){this.indices=e,this.geometry=t},VertexAttributeDelegate=function(){};VertexAttributeDelegate.prototype.handleError=function(e,t){console.log("ERROR(VertexAttributeDelegate):"+e+":"+t)},VertexAttributeDelegate.prototype.convert=function(e,t){return e},VertexAttributeDelegate.prototype.bufferResourceAvailable=function(e,t){var r,a,n,i=t.geometry,s=t.attribute,o=t.semantic;if("POSITION"==o)r=new Float32Array(e,0,s.count*componentsPerElementForGLType(s.type)),i.geometry.setAttribute("position",new THREE.BufferAttribute(r,3));else if("NORMAL"==o)n=componentsPerElementForGLType(s.type),r=new Float32Array(e,0,s.count*n),i.geometry.setAttribute("normal",new THREE.BufferAttribute(r,3));else if("TEXCOORD_0"==o||"TEXCOORD"==o){for(n=componentsPerElementForGLType(s.type),r=new Float32Array(e,0,s.count*n),a=0;a<r.length/2;a++)r[2*a+1]=1-r[2*a+1];i.geometry.setAttribute("uv",new THREE.BufferAttribute(r,n))}else"WEIGHT"==o?(n=componentsPerElementForGLType(s.type),r=new Float32Array(e,0,s.count*n),i.geometry.setAttribute("skinWeight",new THREE.BufferAttribute(r,n))):"JOINT"==o&&(n=componentsPerElementForGLType(s.type),r=new Float32Array(e,0,s.count*n),i.geometry.setAttribute("skinIndex",new THREE.BufferAttribute(r,n)))},VertexAttributeDelegate.prototype.resourceAvailable=function(e,t){this.bufferResourceAvailable(e,t);var r=t.geometry;return r.loadedAttributes++,r.checkFinished(),!0};var vertexAttributeDelegate=new VertexAttributeDelegate,VertexAttributeContext=function(e,t,r){this.attribute=e,this.semantic=t,this.geometry=r},Mesh=function(){this.primitives=[],this.materialsPending=[],this.loadedGeometry=0,this.onCompleteCallbacks=[]};Mesh.prototype.addPrimitive=function(e,t){var r=this;e.onload=function(){r.loadedGeometry++,r.checkComplete()},this.primitives.push({geometry:e,material:t,mesh:null})},Mesh.prototype.onComplete=function(e){this.onCompleteCallbacks.push(e)},Mesh.prototype.checkComplete=function(){var e=this;this.onCompleteCallbacks.length&&this.primitives.length==this.loadedGeometry&&(this.onCompleteCallbacks.forEach((function(t){t(e)})),this.onCompleteCallbacks=[])},Mesh.prototype.attachToNode=function(e){var t=this;this.primitives.forEach((function(r){var a=r.material,n=a.params;if(a instanceof THREE.Material||(a=createShaderMaterial(a)),!t.skin){var i=new THREE.Mesh(r.geometry.geometry,a);if(i.castShadow=!0,e.add(i),a instanceof THREE.ShaderMaterial){var s=new glTFShader(a,n,i,theLoader.rootObj);glTFShaders.add(s)}}}))};var Material=function(e){this.params=e},AnimationParameterDelegate=function(){};AnimationParameterDelegate.prototype.handleError=function(e,t){console.log("ERROR(AnimationParameterDelegate):"+e+":"+t)},AnimationParameterDelegate.prototype.convert=function(e,t){var r=t.parameter,a=null;switch(r.type){case"SCALAR":case"VEC2":case"VEC3":case"VEC4":a=new Float32Array(e,0,r.count*componentsPerElementForGLType(r.type))}return a},AnimationParameterDelegate.prototype.resourceAvailable=function(e,t){var r=t.animation,a=t.parameter;return a.data=e,r.handleParameterLoaded(a),!0};var animationParameterDelegate=new AnimationParameterDelegate,AnimationParameterContext=function(e,t){this.parameter=e,this.animation=t},Animation=function(){this.totalParameters=0,this.loadedParameters=0,this.parameters={},this.finishedLoading=!1,this.onload=null};Animation.prototype.constructor=Animation,Animation.prototype.handleParameterLoaded=function(e){this.parameters[e.name]=e,this.loadedParameters++,this.checkFinished()},Animation.prototype.checkFinished=function(){this.loadedParameters===this.totalParameters&&(this.finishedLoading=!0,this.onload&&this.onload())};var InverseBindMatricesDelegate=function(){};InverseBindMatricesDelegate.prototype.handleError=function(e,t){console.log("ERROR(InverseBindMatricesDelegate):"+e+":"+t)},InverseBindMatricesDelegate.prototype.convert=function(e,t){var r=t.parameter,a=null;return"MAT4"===r.type&&(a=new Float32Array(e,0,r.count*componentsPerElementForGLType(r.type))),a},InverseBindMatricesDelegate.prototype.resourceAvailable=function(e,t){return t.skin.inverseBindMatrices=e,!0};var inverseBindMatricesDelegate=new InverseBindMatricesDelegate,InverseBindMatricesContext=function(e,t){this.parameter=e,this.skin=t},ShaderDelegate=function(){};ShaderDelegate.prototype.handleError=function(e,t){console.log("ERROR(ShaderDelegate):"+e+":"+t)},ShaderDelegate.prototype.convert=function(e,t){return e},ShaderDelegate.prototype.resourceAvailable=function(e,t){return theLoader.shadersLoaded++,theLoader.shaders[t.id]=e,!0};var shaderDelegate=new ShaderDelegate,ShaderContext=function(e,t){this.id=e,this.uri=t},ResourceEntry=function(e,t,r){this.entryID=e,this.object=t,this.description=r},Resources=function(){this._entries={}};Resources.prototype.setEntry=function(e,t,r){e?(this._entries[e]&&console.warn("entry["+e+"] is being overwritten"),this._entries[e]=new ResourceEntry(e,t,r)):console.error("No EntryID provided, cannot store",r)},Resources.prototype.getEntry=function(e){return this._entries[e]},Resources.prototype.clearEntries=function(){this._entries={}};var LoadDelegate=function(){};LoadDelegate.prototype.loadCompleted=function(e,t){e.call(Window,t)};var ThreeGLTFLoader=Object.create(glTFParser,{load:{enumerable:!0,value:function(e,t){this.resources=new Resources,this.cameras=[],this.lights=[],this.animations=[],this.joints={},GLTFLoaderUtils.init(),glTFParser.load.call(this,e,t)}},cameras:{enumerable:!0,writable:!0,value:[]},lights:{enumerable:!0,writable:!0,value:[]},animations:{enumerable:!0,writable:!0,value:[]},handleBuffer:{value:function(e,t,r){return this.resources.setEntry(e,null,t),t.type="ArrayBuffer",!0}},handleBufferView:{value:function(e,t,r){this.resources.setEntry(e,null,t);var a=this.resources.getEntry(t.buffer);return t.type="ArrayBufferView",this.resources.getEntry(e).buffer=a,!0}},handleShader:{value:function(e,t,r){this.resources.setEntry(e,null,t);var a={id:e,uri:t.uri},n=new ShaderContext(e,t.uri);return theLoader.shadersRequested++,GLTFLoaderUtils.getFile(a,shaderDelegate,n),!0}},handleProgram:{value:function(e,t,r){return this.resources.setEntry(e,null,t),!0}},handleTechnique:{value:function(e,t,r){return t.refCount=0,this.resources.setEntry(e,null,t),!0}},createShaderParams:{value:function(e,t,r,a,n){var i=this.resources.getEntry(a);if(r.uniforms={},r.attributes={},r.program=i,r.technique=n,i){for(var s in r.fragmentShader=i.description.fragmentShader,r.vertexShader=i.description.vertexShader,n.uniforms){var o,c,l=n.uniforms[s],u=n.parameters[l],h=u.type,d=u.count,m=t[l],p="";switch(h){case WebGLRenderingContext.FLOAT:p="f",o=u.value,"transparency"==l&&(o=m,r.transparent=!0);break;case WebGLRenderingContext.FLOAT_VEC2:if(p="v2",o=new THREE.Vector2,u&&u.value){var f=u.value;o.fromArray(f)}m&&o.fromArray(m);break;case WebGLRenderingContext.FLOAT_VEC3:if(p="v3",o=new THREE.Vector3,u&&u.value){var v=u.value;o.fromArray(v)}m&&o.fromArray(m);break;case WebGLRenderingContext.FLOAT_VEC4:if(p="v4",o=new THREE.Vector4,u&&u.value){var g=u.value;o.fromArray(g)}m&&o.fromArray(m);break;case WebGLRenderingContext.FLOAT_MAT2:console.log("Warning: FLOAT_MAT2");break;case WebGLRenderingContext.FLOAT_MAT3:if(p="m3",o=new THREE.Matrix3,u&&u.value){var y=u.value;o.fromArray(y)}m&&o.fromArray(m);break;case WebGLRenderingContext.FLOAT_MAT4:if(void 0!==d){p="m4v",o=new Array(d);for(var b=0;b<d;b++)o[b]=new THREE.Matrix4;if(c=d,u&&u.value){var E=u.value;o.fromArray(E)}m&&o.fromArray(m)}else{if(p="m4",o=new THREE.Matrix4,u&&u.value){var T=u.value;o.fromArray(T)}m&&o.fromArray(m)}break;case WebGLRenderingContext.SAMPLER_2D:p="t",o=m?CreateTexture(this.resources,m):null;break;default:throw new Error("Unknown shader uniform param type: "+h+" - "+theLoader.idx[h])}var A={type:p,value:o,length:c};r.uniforms[s]=A}for(var R in n.attributes){l=n.attributes[R];var L=n.parameters[l],w={type:L.type,semantic:L.semantic};r.attributes[R]=w}}}},threeJSMaterialType:{value:function(e,t,r){var a,n=t.extensions,i=n?n.KHR_materials_common:null,s=null;if(i){switch(i.technique){case"BLINN":case"PHONG":s=THREE.MeshPhongMaterial;break;case"LAMBERT":s=THREE.MeshLambertMaterial;break;default:s=THREE.MeshBasicMaterial}for(prop in i.doubleSided&&(r.side=THREE.DoubleSide),i.transparent&&(r.transparent=!0),a={},i.values)a[prop]=i.values[prop]}else{var o=t.technique?this.resources.getEntry(t.technique):null;a=t.values;var c=o.description;++c.refCount;var l=c.program;this.createShaderParams(e,a,r,l,c),s=Material}a.diffuse&&"string"==typeof a.diffuse&&(r.map=CreateTexture(this.resources,a.diffuse)),a.reflective&&"string"==typeof a.reflective&&(r.envMap=CreateTexture(this.resources,a.reflective));var u=a.shininesss||a.shininess,h=null;r.map||(h=a.diffuse);var d=1;return a.hasOwnProperty("transparency")&&(d=a.transparency),r.color=RgbArraytoHex(h),r.opacity=d,r.transparent=d<1,r.map&&-1!=r.map.sourceFile.toLowerCase().indexOf(".png")&&(r.transparent=!0),void 0!==u&&(r.shininess=Math.max(u,1e-4)),delete r.ambient,void 0!==a.ambient&&a.ambient,void 0!==a.emission&&(r.emissive=RgbArraytoHex(a.emission)),void 0!==a.specular&&(r.specular=RgbArraytoHex(a.specular)),s}},handleMaterial:{value:function(e,t,r){var a={},n=new(this.threeJSMaterialType(e,t,a))(a);return this.resources.setEntry(e,n,t),!0}},handleMesh:{value:function(e,t,r){var a=new Mesh;this.resources.setEntry(e,a,t);var n=t.primitives;if(!n)return console.log("MISSING_PRIMITIVES for mesh:"+e),!1;for(var i=0;i<n.length;i++){var s=n[i];if(s.mode===WebGLRenderingContext.TRIANGLES){var o=new ClassicGeometry,c=this.resources.getEntry(s.material);a.addPrimitive(o,c.object);var l=Object.keys(s.attributes);l.forEach((function(e){o.totalAttributes++}),this);var u=this.resources.getEntry(s.indices),h={bufferView:this.resources.getEntry(u.description.bufferView),byteOffset:u.description.byteOffset,count:u.description.count,id:u.entryID,componentType:u.description.componentType,type:u.description.type},d=new IndicesContext(h,o),m={indicesObject:h,indicesDelegate,indicesContext:d};theLoader.scheduleLoad((function(e){var t=GLTFLoaderUtils.getBuffer(e.indicesObject,e.indicesDelegate,e.indicesContext);t&&e.indicesDelegate.resourceAvailable(t,e.indicesContext)}),m),l.forEach((function(e){var r,a=s.attributes[e],n=this.resources.getEntry(a);if(n)(r=n.object).id=a,i=this.resources.getEntry(r.bufferView);else{(r=t.attributes[a]).id=a,this.resources.setEntry(a,r,r);var i=this.resources.getEntry(r.bufferView);n=this.resources.getEntry(a)}var c={bufferView:i,byteOffset:r.byteOffset,byteStride:r.byteStride,count:r.count,max:r.max,min:r.min,componentType:r.componentType,type:r.type,id:a},l=new VertexAttributeContext(c,e,o),u={attributeObject:c,vertexAttributeDelegate,attribContext:l};theLoader.scheduleLoad((function(e){var t=GLTFLoaderUtils.getBuffer(e.attributeObject,e.vertexAttributeDelegate,e.attribContext);t&&e.vertexAttributeDelegate.resourceAvailable(t,e.attribContext)}),u)}),this)}}return!0}},handleCamera:{value:function(e,t,r){var a;if("perspective"==t.type){var n=t.perspective.znear,i=t.perspective.zfar,s=t.perspective.yfov,o=t.perspective.xfov,c=t.perspective.aspect_ratio;c||(c=1),void 0===o&&s&&(o=s*c),void 0===s&&o&&(s=o/c),o&&(o=THREE.Math.radToDeg(o),a=new THREE.PerspectiveCamera(o,c,n,i))}else a=new THREE.OrthographicCamera(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,n,i);return a&&this.resources.setEntry(e,a,t),!0}},handleLight:{value:function(e,t,r){var a=null,n=t.type;if(n&&t[n]){var i=RgbArraytoHex(t[n].color);switch(n){case"directional":(a=new THREE.DirectionalLight(i)).position.set(0,0,1);break;case"point":a=new THREE.PointLight(i);break;case"spot ":(a=new THREE.SpotLight(i)).position.set(0,0,1);break;case"ambient":a=new THREE.AmbientLight(i)}}return a&&this.resources.setEntry(e,a,t),!0}},addPendingMesh:{value:function(e,t){theLoader.pendingMeshes.push({mesh:e,node:t})}},handleNode:{value:function(e,t,r){var a=null;t.jointName?((a=new THREE.Bone).jointName=t.jointName,this.joints[t.jointName]=e):a=new THREE.Object3D,a.name=t.name,a.glTFID=e,a.glTF=t,this.resources.setEntry(e,a,t);var n=t.matrix;if(n)a.matrixAutoUpdate=!1,a.applyMatrix4((new THREE.Matrix4).set(n[0],n[4],n[8],n[12],n[1],n[5],n[9],n[13],n[2],n[6],n[10],n[14],n[3],n[7],n[11],n[15]));else{var i=t.translation,s=t.rotation,o=t.scale,c=i?new THREE.Vector3(i[0],i[1],i[2]):new THREE.Vector3,l=s?new THREE.Quaternion(s[0],s[1],s[2],s[3]):new THREE.Quaternion,u=o?new THREE.Vector3(o[0],o[1],o[2]):new THREE.Vector3(1,1,1),h=new THREE.Matrix4;h.compose(c,l,u),a.matrixAutoUpdate=!1,a.applyMatrix(h)}var d,m=this;if(t.meshes&&(t.meshInstances={},t.skin&&(d=this.resources.getEntry(t.skin)),t.meshes.forEach((function(e){var r=this.resources.getEntry(e);theLoader.meshesRequested++,r.object.onComplete((function(n){m.addPendingMesh(n,a),t.meshInstances[e]=r.object,d&&(n.skin=d,t.instanceSkin=d.object),theLoader.meshesLoaded++,theLoader.checkComplete()}))}),this)),t.camera){var p=this.resources.getEntry(t.camera);p&&(a.add(p.object),this.cameras.push(p.object))}if(t.extensions&&t.extensions.KHR_materials_common&&t.extensions.KHR_materials_common.light){var f=t.extensions.KHR_materials_common.light,v=this.resources.getEntry(f);v&&(a.add(v.object),this.lights.push(v.object))}return!0}},handleExtension:{value:function(e,t,r){if("KHR_materials_common"===e){var a=t.lights;for(lightID in a){var n=a[lightID];this.handleLight(lightID,n)}}return!0}},buildNodeHirerachy:{value:function(e,t){var r=this.resources.getEntry(e),a=r.object;t.add(a);var n=r.description.children;return n&&n.forEach((function(e){this.buildNodeHirerachy(e,a)}),this),a}},buildSkin:{value:function(e){var t=e.glTF,r=t.instanceSkin,a=t.skeletons;r&&a.forEach((function(a){var n=this.resources.getEntry(a);if(n){var i=n.object;for(meshID in e.add(i),t.meshInstances){var s=t.meshInstances[meshID],o=null;s.primitives.forEach((function(t){var n=t.material,i=n.params;if(n instanceof THREE.Material||(n=createShaderMaterial(n)),o=new THREE.SkinnedMesh(t.geometry.geometry,n,!1),t.geometry.geometry,o){n.skinning=!0;var s,c=r.jointNames,l=[],u=[],h=[],d=c.length;for(s=0;s<d;s++){var m=c[s],p=this.joints[m],f=this.resources.getEntry(p).object;if(f){f.skin=o,l.push(f),u.push(f);var v=r.inverseBindMatrices,g=(new THREE.Matrix4).set(v[16*s+0],v[16*s+4],v[16*s+8],v[16*s+12],v[16*s+1],v[16*s+5],v[16*s+9],v[16*s+13],v[16*s+2],v[16*s+6],v[16*s+10],v[16*s+14],v[16*s+3],v[16*s+7],v[16*s+11],v[16*s+15]);h.push(g)}else console.log("WARNING: jointName:"+m+" cannot be found in skeleton:"+a)}o.bind(new THREE.Skeleton(u,h,!1),r.bindShapeMatrix)}if(o&&(o.castShadow=!0,e.add(o),n instanceof THREE.ShaderMaterial)){i.joints=l;var y=new y(n,i,o,theLoader.rootObj);glTFShaders.add(y)}}),this)}}}),this)}},buildSkins:{value:function(e){e.glTF&&e.glTF.instanceSkin&&this.buildSkin(e);var t=e.children;t&&t.forEach((function(e){this.buildSkins(e)}),this)}},createMeshAnimations:{value:function(e){this.buildSkins(e)}},handleScene:{value:function(e,t,r){return t.nodes?(t.nodes.forEach((function(e){this.buildNodeHirerachy(e,r.rootObj)}),this),this.delegate&&this.delegate.loadCompleted(r.callback,r.rootObj),theLoader.loadAllAssets(),!0):(console.log("ERROR: invalid file required nodes property is missing from scene"),!1)}},handleImage:{value:function(e,t,r){return this.resources.setEntry(e,null,t),!0}},addNodeAnimationChannel:{value:function(e,t,r){this.nodeAnimationChannels||(this.nodeAnimationChannels={}),this.nodeAnimationChannels[e]||(this.nodeAnimationChannels[e]=[]),this.nodeAnimationChannels[e].push(r)}},createAnimations:{value:function(){for(var e in this.nodeAnimationChannels){var t=this.nodeAnimationChannels[e],r=(t.length,new THREE.glTFAnimation(t));r.name="animation_"+e,this.animations.push(r)}}},buildAnimation:{value:function(e){var t,r=[],a=e.channels.length;for(t=0;t<a;t++){var n=e.channels[t],i=e.samplers[n.sampler];if(i){var s=e.parameters[i.input];if(s&&s.data){var o=e.parameters[i.output];if(o&&o.data){var c=n.target,l=this.resources.getEntry(c.id);if(l){var u=c.path,h={keys:s.data,values:o.data,count:s.count,target:l.object,path:u,type:i.interpolation};this.addNodeAnimationChannel(c.id,n,h),r.push(h)}}}}}}},handleAnimation:{value:function(e,t,r){theLoader.animationsRequested++;var a=new Animation;a.name=e,a.onload=function(){theLoader.animationsLoaded++,theLoader.animations.push(a),theLoader.checkComplete()},a.channels=t.channels,a.samplers=t.samplers,this.resources.setEntry(e,a,t);var n=t.parameters;return n?(Object.keys(n).forEach((function(e){a.totalParameters++}),this),Object.keys(n).forEach((function(e){var t=n[e],r=this.resources.getEntry(t);r=r.object;var i={bufferView:this.resources.getEntry(r.bufferView),byteOffset:r.byteOffset,count:r.count,componentType:r.componentType,type:r.type,id:r.bufferView,name:e},s=new AnimationParameterContext(i,a),o={paramObject:i,animationParameterDelegate,paramContext:s};theLoader.scheduleLoad((function(e){var t=GLTFLoaderUtils.getBuffer(e.paramObject,e.animationParameterDelegate,e.paramContext);t&&e.animationParameterDelegate.resourceAvailable(t,e.paramContext)}),o)}),this),!0):(console.log("MISSING_PARAMETERS for animation:"+e),!1)}},handleAccessor:{value:function(e,t,r){return this.resources.setEntry(e,t,t),!0}},handleSkin:{value:function(e,t,r){var a={},n=t.bindShapeMatrix;a.bindShapeMatrix=(new THREE.Matrix4).set(n[0],n[4],n[8],n[12],n[1],n[5],n[9],n[13],n[2],n[6],n[10],n[14],n[3],n[7],n[11],n[15]),a.jointNames=t.jointNames;var i=this.resources.getEntry(t.inverseBindMatrices);i=i.description,a.inverseBindMatricesDescription=i,a.inverseBindMatricesDescription.id=t.inverseBindMatrices;var s={bufferView:this.resources.getEntry(i.bufferView),byteOffset:i.byteOffset,count:i.count,componentType:i.componentType,type:i.type,id:i.bufferView,name:a.inverseBindMatricesDescription.id},o=new InverseBindMatricesContext(s,a),c={paramObject:s,inverseBindMatricesDelegate,context:o};theLoader.scheduleLoad((function(e){var t=GLTFLoaderUtils.getBuffer(e.paramObject,e.inverseBindMatricesDelegate,e.context);t&&e.inverseBindMatricesDelegate.resourceAvailable(t,e.context)}),c);var l=this.resources.getEntry(a.inverseBindMatricesDescription.bufferView);return a.inverseBindMatricesDescription.bufferView=l.object,this.resources.setEntry(e,a,t),!0}},handleSampler:{value:function(e,t,r){return this.resources.setEntry(e,t,t),!0}},handleTexture:{value:function(e,t,r){return this.resources.setEntry(e,null,t),!0}},handleError:{value:function(e){throw new Error(e)}},_delegate:{value:new LoadDelegate,writable:!0},delegate:{enumerable:!0,get:function(){return this._delegate},set:function(e){this._delegate=e}}}),Context=function(e,t){this.rootObj=e,this.callback=t},rootObj=new THREE.Object3D,self=this,loader=Object.create(ThreeGLTFLoader);return loader.initWithPath(url),loader.load(new Context(rootObj,(function(e){})),null),this.loader=loader,this.callback=callback,this.rootObj=rootObj,rootObj},glTFLoader.prototype.scheduleLoad=function(e,t){this.loadRequests.push({fn:e,data:t})},glTFLoader.prototype.loadAllAssets=function(){for(var e=0,t=this.loadRequests.length;e<t;e++){var r=this.loadRequests[e];r.fn(r.data)}},glTFLoader.prototype.callLoadedCallback=function(){var e={scene:this.rootObj,cameras:this.loader.cameras,animations:this.loader.animations,shaders:this.loader.shaders};this.callback(e)},glTFLoader.prototype.checkComplete=function(){if(this.meshesLoaded==this.meshesRequested&&this.shadersLoaded==this.shadersRequested&&this.animationsLoaded==this.animationsRequested){for(var e=0;e<this.pendingMeshes.length;e++){var t=this.pendingMeshes[e];t.mesh.attachToNode(t.node)}for(e=0;e<this.animationsLoaded;e++){var r=this.animations[e];this.loader.buildAnimation(r)}this.loader.createAnimations(),this.loader.createMeshAnimations(this.rootObj),glTFShaders.bindShaderParameters(this.rootObj),this.callLoadedCallback()}};export{glTFLoader};